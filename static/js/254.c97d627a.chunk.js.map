{"version":3,"file":"static/js/254.c97d627a.chunk.js","mappings":"kOAwDA,UAlDa,WACX,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qFACjBJ,GAAW,GADM,cAGfF,EAHe,UAGAO,EAAAA,EAAAA,GAAOJ,GAHP,kFAKfK,QAAQC,IAAR,MALe,yBAOfP,GAAW,GAPI,4EAAH,qDAUhBI,GACD,GAAE,CAACH,IAKJ,OACE,gCACGF,IAAW,SAAC,IAAD,KACVF,IAAS,0EACVA,IACC,wBACGA,EAAMW,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACT,2BACE,gBACEC,IACED,EAAY,yCAC0BA,GAbpD,iEAgBYE,IAAKH,KAEP,4BACE,uBAAID,KACJ,uBAAIC,SAXCT,EADA,QAoBpB,C,8LCpDKa,EAAM,gCACNC,EAAM,mCAECC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACeC,EADf,oBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,SAJa,2CAAH,qDAOjB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACUC,EADV,kBACuBM,EADvB,+CADlB,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BrB,GAA1B,yFACkBgB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNb,EADM,oBACQc,EADR,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAAsBJ,GAAtB,yFACkBgB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLb,EADK,4BACiBc,EADjB,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKK,MAJP,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBvB,GAAzB,yFACkBgB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLb,EADK,4BACiBc,EADjB,2BADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKO,QAJP,kE","sources":["pages/MovieDetails/Cast/Cast.jsx","service/serviceApi.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { geCast } from 'service/serviceApi';\nimport Loader from 'components/Loader/Loader';\n\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const renderCast = async () => {\n      setLoading(true);\n      try {\n        setCasts(await geCast(id));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    renderCast();\n  }, [id]);\n\n  const defaultImage =\n    'https://eshop.spartan.gr/images/virtuemart/product/noimage.jpg';\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!casts && <h2>We don't have a list of actors for this movie</h2>}\n      {casts && (\n        <ul>\n          {casts.map(({ id, character, name, profile_path }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : defaultImage\n                }\n                alt={name}\n              />\n              <div>\n                <p>{character}</p>\n                <p>{name}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '97351dad33470e0eca287ff9afbde43d';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `${URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport async function getSearchQuery(query) {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n}\n\nexport async function getDetails(id) {\n  const { data } = await axios.get(\n    `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function geCast(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n\nexport async function getReview(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.result;\n}"],"names":["useState","casts","setCasts","loading","setLoading","id","useParams","useEffect","renderCast","geCast","console","log","map","character","name","profile_path","src","alt","URL","KEY","getTrending","axios","data","results","getSearchQuery","query","getDetails","cast","getReview","result"],"sourceRoot":""}