{"version":3,"file":"static/js/269.d090e12b.chunk.js","mappings":"kOA+CA,UAzCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,qFACpBJ,GAAW,GADS,cAGlBF,EAHkB,UAGDO,EAAAA,EAAAA,IAAUJ,GAHT,kFAKlBK,QAAQC,IAAR,MALkB,yBAOlBP,GAAW,GAPO,4EAAH,qDAUnBI,GACD,GAAE,CAACH,KAOF,gCACGF,IAAW,SAAC,IAAD,KACVF,IAAW,qEACZA,IACC,wBACGA,EAAQW,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGT,EADE,QAUtB,C,8LC3CKU,EAAM,gCACNC,EAAM,mCAECC,EAAW,mCAAG,sGACFC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACeC,EADf,oBADE,uBACjBG,EADiB,EACjBA,KADiB,kBAIlBA,EAAKC,SAJa,2CAAH,qDAOjB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACUC,EADV,kBACuBM,EADvB,+CADlB,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BlB,GAA1B,yFACkBa,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACNV,EADM,oBACQW,EADR,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAsBnB,GAAtB,yFACkBa,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLV,EADK,4BACiBW,EADjB,oBADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKM,MAJP,kEAOA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAyBJ,GAAzB,yFACkBa,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACLV,EADK,4BACiBW,EADjB,2BADlB,uBACGG,EADH,EACGA,KADH,kBAIEA,EAAKO,QAJP,kE","sources":["pages/MovieDetails/Reviews/Reviews.jsx","service/serviceApi.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReview } from 'service/serviceApi';\nimport Loader from 'components/Loader/Loader';\n\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const renderReviews = async () => {\n      setLoading(true);\n      try {\n        setReviews(await getReview(id));\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    renderReviews();\n  }, [id]);\n\n  if (reviews === 0) {\n    <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!reviews && <h2>We don't have any reviews for this movie</h2>}\n      {reviews && (\n        <ul >\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/';\nconst KEY = '97351dad33470e0eca287ff9afbde43d';\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    `${URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return data.results;\n};\n\nexport async function getSearchQuery(query) {\n  const { data } = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return data.results;\n}\n\nexport async function getDetails(id) {\n  const { data } = await axios.get(\n    `${URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function geCast(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data.cast;\n}\n\nexport async function getReview(id) {\n  const { data } = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data.result;\n}"],"names":["useState","reviews","setReviews","loading","setLoading","id","useParams","useEffect","renderReviews","getReview","console","log","map","author","content","URL","KEY","getTrending","axios","data","results","getSearchQuery","query","getDetails","geCast","cast","result"],"sourceRoot":""}